group 'com.example'
version '1.0-SNAPSHOT'


buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.7.RELEASE")
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}


group = 'savva'


apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'
apply plugin: 'application'


idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
    }
}

jar {
    baseName = 'rest-service'
    version =  '0.1.0'
}

war {
    baseName = 'rest-service'
    version =  '0.5.0'
}

apply plugin: 'docker'

task buildDocker(type: Docker, dependsOn: build) {
    applicationName = jar.baseName
    dockerfile = file('Dockerfile')
    doFirst {
        copy {
            from jar
            into "${stageDir}/build/libs"
        }
    }
}


repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8



dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile('org.springframework.boot:spring-boot-starter-test')
    compile group: 'org.testng', name: 'testng', version: '6.11'
    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
    //Jakson Databind
    compile("org.springframework:spring-web")
    compile("com.fasterxml.jackson.core:jackson-databind")

    //JPA Data (We are going to use Repositories, Entities, Hibernate, etc...)
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    // Use MySQL Connector-J
    compile 'mysql:mysql-connector-java'
    compile("org.springframework:spring-jdbc")
    compile("com.h2database:h2")
    //Security
    compile group: 'org.springframework.security', name: 'spring-security-web', version: '4.2.3.RELEASE'
    testCompile group: 'org.springframework.security', name: 'spring-security-test', version: '4.2.3.RELEASE'
    compile group: 'org.springframework.security', name: 'spring-security-config', version: '4.2.3.RELEASE'
    compile("org.springframework.boot:spring-boot-starter-security")

    compile group: 'org.webjars', name: 'jquery', version: '3.2.1'

    //HTML templates
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.springframework.boot:spring-boot-devtools")
    //Swagger
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.7.0'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.7.0'
    //Other
    compile group: 'log4j', name: 'log4j', version: '1.2.17'
    compile group: 'org.projectlombok', name: 'lombok', version: '1.16.18'
    compile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    compile group: 'org.hamcrest', name: 'java-hamcrest', version: '2.0.0.0'

}






task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}



test{
    useTestNG(){
        suiteXmlFiles << new File("${projectDir}/src/test/resources/", "suite.xml")
    }
}


bootRun {
    addResources = true
}